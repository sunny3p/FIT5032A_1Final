@model FIT5032A_1Final.Models.Reservation

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reservation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.R_Id)

    @*@Html.ValidationMessageFor(model => model.R_DateTime, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.R_DateTime)*@

    @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Reason)

    @Html.ValidationMessageFor(model => model.PId, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.PId)

    @Html.ValidationMessageFor(model => model.EId, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.EId)




    <div class="form-group">
        @Html.LabelFor(model => model.R_Status, "Reservation Status", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.R_Status, new SelectList(new[] { "Confirm", "Pending", "Cancel" }), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.R_Status, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" hidden="hidden">
        @Html.LabelFor(model => model.R_DateTime, "Date Time", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.R_DateTime, new { htmlAttributes = new { @class = "form-control", @id = "tutu", @readonly = "readonly" } })
            @Html.ValidationMessageFor(model => model.R_DateTime, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.R_DateTime)
        </div>
    </div>
    <div class="form-group">
        @Html.Label("Select date", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="datetime" value="@ViewBag.Date" id="date" class="form-control" readonly="readonly" onchange="enableTime()" />
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Select time",htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" value="@ViewBag.Time" id="timepicker" class="form-control" readonly="readonly" disabled="disabled" />
        </div>
    </div>

    @*<div class="form-group">
            @Html.LabelFor(model => model.Reason, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Reason, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Reason, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Reason)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PId, "PId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("PId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.PId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.PId)
            </div>
        </div>*@


    @*<div class="form-group">
            @Html.LabelFor(model => model.EId, "EId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("EId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.EId, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.EId)
            </div>
        </div>*@

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "EmpDetail", "Health_Info")
    <br />
    @Html.ActionLink("Back to Calendar", "Calendar", "Health_Info")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/css/bootstrap-datepicker3.css" />
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datepicker/1.4.1/js/bootstrap-datepicker.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>


    <script>

            $(document).ready(function () {

                var date_input = $('input[id="date"]'); //our date input has the name "date"
                var container = $('.bootstrap-iso form').length > 0 ? $('.bootstrap-iso form').parent() : "body";

                var options = {
                    format: 'dd/MM/yyyy',
                    container: container,
                    todayHighlight: true,
                    autoclose: true,
                    orientation: "top",
                    startDate: new Date()
                };

                date_input.datepicker(options);

            })

    </script>


    <script>

        function enableTime() {
            document.getElementById("timepicker").disabled = false;
        }

        function myFunction() {
            document.getElementById("tutu").value = document.getElementById("date").value + " " + document.getElementById("timepicker").value;
        }
    </script>

    <script>

        $('#timepicker').timepicker({
            timeFormat: 'HH:mm',
            interval: 30,
            minTime: '10',
            maxTime: '09:00pm',
            startTime: '09:00',
            dynamic: false,
            dropdown: true,
            scrollbar: true,
            change: myFunction
        });

    </script>
}